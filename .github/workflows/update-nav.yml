name: update-nav

on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: true
      - name: Ensure nav links and related content
        shell: bash
        run: |
          set -euo pipefail
          # Reuse logic similar to memotopia-update-nav.sh
          add_main_link() {
            local file="$1"
            local link='[Voltar ao Índice da Memotopia](../../INDEX.md)'
            if ! grep -qF "$link" "$file"; then
              if head -n1 "$file" | grep -q '^---$'; then
                fm=$(sed -n '/^---$/,/^---$/p' "$file")
                start=$(grep -n '^---$' "$file" | tail -n1 | cut -d: -f1)
                rest=$(tail -n +$((start+1)) "$file")
                printf "%s\n\n%s\n\n%s\n" "$fm" "$link" "$rest" > "$file"
              else
                printf "%s\n\n%s\n" "$link" "$(cat "$file")" > "$file"
              fi
            fi
          }
          generate_related() {
            local index_file="$1"
            local text_dir=$(dirname "$index_file")
            # remove existing block
            sed -i '/## Conteúdo Relacionado/,/<!-- RELATED_CONTENT_END -->/d' "$index_file" || true
            # trim trailing newlines
            sed -i -e :a -e '/^\n*$/{$d;N;};/\n$/ba' "$index_file" || true
            {
              echo
              echo '## Conteúdo Relacionado'
              echo
              echo '<!-- RELATED_CONTENT_START -->'
              if compgen -G "${text_dir}/insights/*.md" > /dev/null; then
                echo '### Insights'
                for f in "${text_dir}/insights"/*.md; do
                  base=$(basename "$f" .md)
                  title=$(head -n2 "$f" | grep '^#' | sed 's/^# //')
                  [ -n "$title" ] || title="$base"
                  echo "*   [${title}](./insights/${base}.md)"
                done
              fi
              if compgen -G "${text_dir}/referencias/*.md" > /dev/null; then
                echo '### Referências'
                for f in "${text_dir}/referencias"/*.md; do
                  base=$(basename "$f" .md)
                  title=$(head -n2 "$f" | grep '^#' | sed 's/^# //')
                  [ -n "$title" ] || title="$base"
                  echo "*   [${title}](./referencias/${base}.md)"
                done
              fi
              echo '<!-- RELATED_CONTENT_END -->'
            } >> "$index_file"
          }

          shopt -s nullglob
          changed=0
          for d in textos/*/; do
            idx="${d}index.md"
            [ -f "$idx" ] || continue
            cp "$idx" "$idx.bak"
            add_main_link "$idx"
            generate_related "$idx"
            if ! diff -q "$idx" "$idx.bak" >/dev/null; then
              changed=1
            fi
            rm -f "$idx.bak"
          done
          if [ "$changed" -eq 0 ]; then
            echo "No navigation updates"
            exit 0
          fi
      - name: Commit and push nav updates
        if: success()
        shell: bash
        run: |
          if git diff --quiet; then exit 0; fi
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add textos/**/index.md
          git commit -m "chore(ci): update navigation links"
          git push
name: Update Navigation Links

on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  update_nav:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug - List root directory
        run: ls -l

      - name: Debug - Print current working directory
        run: pwd

      - name: Debug - Check memotopia script permissions
        run: ls -l memotopia

      - name: Run memotopia update-nav
        run: |
          ./memotopia update-nav

      - name: Commit and push changes
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add textos/
          git diff --staged --quiet || git commit -m "chore(nav): atualiza links de navegação"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
